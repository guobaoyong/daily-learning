<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wlgzs.emails.dao.UserMapper">
  <resultMap id="BaseResultMap" type="org.wlgzs.emails.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="activated" jdbcType="BIT" property="activated" />
    <result column="randomCode" jdbcType="VARCHAR" property="randomcode" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userName, password, email, activated, randomCode
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from user
    where userName = #{userName}
  </select>

  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from user
    where email = #{email}
  </select>

  <select id="selectByUserNameOrEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from user
    where email = #{userNameOrEmail} or username = #{userNameOrEmail}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.wlgzs.emails.model.User">
    insert into user (id, userName, password, 
      email, activated, randomCode
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{activated,jdbcType=BIT}, #{randomcode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.wlgzs.emails.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="activated != null">
        activated,
      </if>
      <if test="randomcode != null">
        randomCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="activated != null">
        #{activated,jdbcType=BIT},
      </if>
      <if test="randomcode != null">
        #{randomcode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.wlgzs.emails.model.User">
    update user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="activated != null">
        activated = #{activated,jdbcType=BIT},
      </if>
      <if test="randomcode != null">
        randomCode = #{randomcode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.wlgzs.emails.model.User">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      activated = #{activated,jdbcType=BIT},
      randomCode = #{randomcode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>